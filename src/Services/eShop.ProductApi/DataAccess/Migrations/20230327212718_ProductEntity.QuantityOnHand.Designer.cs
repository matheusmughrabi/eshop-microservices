// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop.ProductApi.DataAccess;

#nullable disable

namespace eShop.ProductApi.DataAccess.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20230327212718_ProductEntity.QuantityOnHand")]
    partial class ProductEntityQuantityOnHand
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("eShop.ProductApi.Domain.CategoryGroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CategoryGroup", (string)null);
                });

            modelBuilder.Entity("eShop.ProductApi.Entity.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoryGroupId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryGroupId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("eShop.ProductApi.Entity.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19,5)");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("eShop.ProductApi.Entity.CategoryEntity", b =>
                {
                    b.HasOne("eShop.ProductApi.Domain.CategoryGroupEntity", "CategoryGroup")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryGroupId");

                    b.Navigation("CategoryGroup");
                });

            modelBuilder.Entity("eShop.ProductApi.Entity.ProductEntity", b =>
                {
                    b.HasOne("eShop.ProductApi.Entity.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eShop.ProductApi.Domain.CategoryGroupEntity", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("eShop.ProductApi.Entity.CategoryEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
