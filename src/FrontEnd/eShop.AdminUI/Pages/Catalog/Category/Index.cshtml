@page
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IndexModel
@{
}

<div>
    <h1>Products catalog</h1>
    <a class="btn btn-primary" asp-page="./Create">Create</a>
</div>


<table class="table">
    <thead>
        <tr>
            <th scope="col" hidden>Id</th>
            <th scope="col">Name</th>
            <th scope="col">Description</th>
            <th scope="col">Number of products</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var category in Model.CategoriesViewModel.Categories)
        {
            <tr>
                <td scope="row" hidden>@category.Id</td>
                <td scope="row">@category.Name</td>
                <td scope="row">@category.Description</td>
                <td scope="row">@category.TotalProducts</td>
                <td scope="row">
                    <a class="btn btn-primary" asp-page="./Details" asp-route-categoryId="@category.Id">Details</a>
                    <a class="btn btn-secondary" asp-page="./Edit" asp-route-id="@category.Id">Edit</a>
                </td>
            </tr>
        }

    </tbody>
</table>

<div class="d-flex flex-row-reverse bd-highlight">
    @Html.PagedListPager(
        Model.CategoriesViewModel.Categories, 
        selectedPage => Url.Action("Index", new { selectedPage }),  
        new PagedListRenderOptions 
        { 
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
            LinkToFirstPageFormat = "First",
            LinkToPreviousPageFormat = "Previous", 
            LinkToNextPageFormat = "Next", 
            LinkToLastPageFormat = "Last",
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always
        })
</div>


