@page
@using System.Globalization
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model eShop.AdminUI.Pages.Catalog.Category.DetailsModel
@{
}

@Html.AntiForgeryToken()

<div class="card shadow">
    <div class="card-body">

        <div class="d-flex justify-content-between">
            <h4 class="card-title">@Model.CategoryDetailsViewModel.Name category</h4>
            <!-- Button trigger modal -->
            <div>
                <button class="btn btn-primary mb-2" data-bs-toggle="modal" data-bs-target="#move-products-modal"><i class="bi bi-arrow-up-right-square"></i> Move products</button>
                <a class="btn btn-primary mb-2" asp-page="/Catalog/Product/Create" asp-route-categoryId="@Model.CategoryDetailsViewModel.Id"><i class="fas fa-circle-plus"></i> New product</a>
            </div>
        </div>

        @if (Model.CategoryDetailsViewModel.Products.Count > 0)
        {
            <div class="list-group">
                @foreach (var product in Model.CategoryDetailsViewModel.Products)
                {
                    <div id="product-div-@product.Id" class="list-group-item list-group-item-action">

                        <div class="d-flex">
                            <div class="flex-shrink-0">
                                <h4 class="mb-1 text-center">@product.Name</h4>
                                <img src="@product.ImagePath" class="rounded float-start" style="width: 8rem;"/>
                            </div>
                            <div class="flex-grow-1 ms-3 align-self-center">
                                <p class="mb-1">@product.Description</p>   
                            </div>
                            <div class="flex-shrink-0">
                                <h4>@product.Price.ToString("C", CultureInfo.CurrentCulture)</h4>
                            </div>
                        </div>

                        <div class="float-end">
                            <button class="btn btn-primary move-product-by-id-button" id="move-product-by-id-button-@product.Id" productId="@product.Id" data-bs-toggle="modal" data-bs-target="#move-product-by-id-modal"><i class="bi bi-arrow-up-right-square"></i> Move</button>
                            <button class="btn btn-danger delete-product-button ml-2" id="delete-product-button-@product.Id" value="@product.Id"> <i class="fas fa-trash-can"></i></button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p>There are no products in this category</p>
        }

        <div class="d-flex flex-row-reverse bd-highlight">
            @Html.PagedListPager(
            Model.CategoryDetailsViewModel.Products,
            selectedPage => Url.Action("Details", new { categoryId = @Model.CategoryDetailsViewModel.Id, selectedPage = selectedPage }),
            new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
            LinkToFirstPageFormat = "First",
            LinkToPreviousPageFormat = "Previous",
            LinkToNextPageFormat = "Next",
            LinkToLastPageFormat = "Last",
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always
            })
        </div>

        <div class="mt-3">
            <a asp-page="./Index" class="btn btn-primary">Return to list</a>
        </div>
    </div>
</div>

<partial name="_MoveProductByIdModal" model="Model.CategoriesDropDown"/>

<!-- Modal -->
<div class="modal fade" id="move-products-modal" tabindex="-1" aria-labelledby="move-products-modal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="move-products-modal-label">Move products</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Choose the category you want to move the products to.</p>

                <select id="destine-category-dropdown" asp-items="Model.CategoriesDropDown" class="form-select"></select>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="move-products-confirm-button">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
<script>
    $(".delete-product-button").click(function(){

        let productToDeleteId = $(this).attr("value");
        const categoryId = '@Model.CategoryDetailsViewModel.Id';

        $.ajax({
           url: '/Catalog/Product/Delete?handler=DeleteProduct',
           type: 'POST',
           contentType: 'application/json',
           headers: {
              RequestVerificationToken:
                  $('input:hidden[name="__RequestVerificationToken"]').val()
           },
           data: JSON.stringify({Id : productToDeleteId, CategoryId : categoryId}),
           success: function( data, textStatus, jQxhr ){
                alert(data.notifications[0].message);
                removeProductListItem(productToDeleteId);
            },
           error: function( jqXhr, textStatus, errorThrown ){
                alert("error when trying to delete product");
            }
        });
    });

    function removeProductListItem(productToDeleteId){
        $(`#product-div-${productToDeleteId}`).remove()
    }

    $("#move-products-confirm-button").click(function(){

        var destineCategoryId = $('#destine-category-dropdown').val();
        var originalCategoryId = '@Model.CategoryDetailsViewModel.Id'

        $.ajax({
           url: '/Catalog/Category/Details?handler=MoveProducts',
           type: 'POST',
           contentType: 'application/json',
           headers: {
              RequestVerificationToken:
                  $('input:hidden[name="__RequestVerificationToken"]').val()
           },
           data: JSON.stringify({DestineCategoryId : destineCategoryId, OriginalCategoryId : originalCategoryId}),
           success: function( data, textStatus, jQxhr ){
                alert(data.notifications[0].message);
                $('#move-products-modal').modal('hide');
                if(data.notifications[0].type == "1"){
                    location.reload(true);
                }
            },
           error: function( jqXhr, textStatus, errorThrown ){
                alert("error when trying to delete product");
            }
        });
    });

</script>

<script src="~/js/moveProductsByIdModal.js"></script>

}
